
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
	a[href^="http://maps.google.com/maps"]{display:none !important}
	a[href^="https://maps.google.com/maps"]{display:none !important}

	.gmnoprint a, .gmnoprint span, .gm-style-cc {
	    display:none;
	}
	.gmnoprint div {
	    background:none !important;
	}


	#usersettings, #delprompt{
		position:fixed;
		background:grey;
		border-radius:15px;
		padding:15px;
		left: 50%;
		top: 50%;
		width:200px;
		transform: translate(-50%, -50%);
		z-index:999;

	}
	#delprompt{
		background:black;
	}
	nav {height:200px; width:300px;}
	nav {overflow:hidden; overflow-y:scroll;}
</style>

<body>
	<div class="header">
	
	<img style="margin-top:0;height:50px;padding-left:20px"src="assets/display.png">


	<button class="onpurp upload" onclick="document.getElementById('fileu').click();closesettings();">+</button>

<button id="set" class="onpurp settings"onclick="showsettings()">⚙</button>


<div id="usersettings" class="usets" style="display:none;">

	<button id="close" class="close" onclick="closesettings()">x</button>

	<p>EDIT AVATAR</p>
	<img class="avatar" id="avatarimg" width="300" style="border-radius:10px">
	<form action="http://localhost:8080/avatar" method="POST" enctype="multipart/form-data">
		<input type="file" id="pimput" name="avatar" onchange="avatared(event)" style="display:none">
		<button class="conflog avataru" id="tick" type="submit" style="display:none">✓</button>
	</form>

	<button class="conflog avatarc" onclick="document.getElementById('pimput').click()">+</button>



	<button id="delete" class="util" onclick="delprompt()">delete user</button>
	<div id="delprompt" style="display:none; height:100px">
		<p>ARE YOU SURE YOU WANT TO DELETE?</p>
		<form action="http://localhost:8080/delete-user" method="POST">
			<button class="util confirm" type="submit">delete user</button>
		</form>
		<button class="util logout cancel" id="cancel" onclick="canceldel()">cancel</button>
	</div>



	<form action="http://localhost:8080/logout" method="POST">
		<button class="util logout" type="submit">logout</button>
	</form>
	<br>

</div>


</div>



<div class="prompt" id="upload" style="opacity:0;display:none;">

<p>POST</p>
<button class="close" onclick="closeupload()">x</button>
<form action="http://localhost:8080/upload" id="fileform" method="POST" enctype="multipart/form-data">

	<input type="file" name="post" style="display:none;"id="fileu" onchange="uploadinit(event)" accept="image/png,image/jpeg,image/*,/video/mp4,video/x-m4v,video/*">
	<button class="sub" onclick="document.getElementById('fileform').submit()">submit</button>
</form>
<textarea placeholder="Description" id="desc" cols="50" form="fileform" rows="3" name="desc" maxlength="256" required></textarea>
</div>
<div class="mapholder">
<div class="map" id="map" style="width:40%; height:70%;"></div>
<button id="center" class="center" onclick="map.setCenter(window.local);">⌖</button>





<div id="display" class="display">
<button id="nb" onclick="shownearby()">nearby users</button><button id="sb" onclick="showfriends()">friends</button>



<nav id="nearby">
	
</nav>


<nav id="friends" style="display:none;">
	
</nav>
</div>
</div>


<form id="form" action="http://localhost:8080/view" method="POST">

</form>


<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYF6pP4axgG1Orx-vwu-AuDty-yJFBC_U&callback=initmap"></script>

<script>
	var users=<%-JSON.stringify(users)%>;
	window.uid=<%-JSON.stringify(req.session.uid)%>;

	var friends=<%-JSON.stringify(friends)%>;


	var map;

	function avatared(event){
		document.getElementById("tick").style.display="block";

		let img = document.getElementById("avatarimg");

		img.src = URL.createObjectURL(event.target.files[0]);
	}

	function closesettings(){
		document.getElementById("usersettings").style.animation="fadeout .25s ease-in-out forwards";

		setTimeout(function(){document.getElementById("usersettings").style.display="none";document.getElementById("tick").style.display="none";},250);

	}
	function showsettings(){
		document.getElementById("usersettings").style.display="block";
		document.getElementById("usersettings").style.animation="fadein .25s ease-in-out forwards";
		closeupload();
	
		document.getElementById("avatarimg").src=`./uploads/${window.uid}/avatar.png`;

	}

	function showupload(){

		document.getElementById("upload").style.display="block";
		document.getElementById("upload").style.animation="fadein .25s ease-in-out forwards";
		closesettings();
		
	}
	function uploadinit(event){


		
		let img = document.createElement("img")
		img.src = URL.createObjectURL(event.target.files[0]);
		img.id="curruploaded";
		document.getElementById("upload").appendChild(img);

		let image = document.getElementById("curruploaded");

		image.onload = function(){
		let width=image.width;
		let height=image.height;

		if (width>height){
			var divis = 400/width;
		}
		else{
			var divis = 400/height;
		}

		console.log(width*divis,width*divis,width*divis)

		image.width = width*divis;
		image.height = height*divis;
		

		showupload();
	}
	}

	function closeupload(){
	
		document.getElementById("upload").style.animation="fadeout .25s ease-in-out forwards";

		setTimeout(function(){document.getElementById("upload").style.display="none";document.getElementById("curruploaded").remove();},250);

		document.getElementById("fileu").remove();

		let asd = document.createElement("input");

		asd.type="file";
		asd.name="post";
		asd.style="display:none";
		asd.id="fileu"
		asd.onchange=function(){uploadinit(event)};
		asd.accept="image/png,image/jpeg,image/*,/video/mp4,video/x-m4v,video/*";

		document.getElementById("fileform").appendChild(asd);
		
	}

	function showlogin(){
	
		document.getElementById("signup").style.animation="fadeout .5s ease-in-out forwards";

		setTimeout( function(){
			document.getElementById("login").style.animation="fadein .5s ease-in-out forwards";
		},500);

		setTimeout ( function(){
			document.getElementById("signup").style.display="none";
			document.getElementById("login").style.display="block";
		},1000);

		
	}

	console.log(friends)
	for (index in friends){
		let form = document.createElement("form");
		form.action="http://localhost:8080/view";
		form.method="POST";
		form.id=index;


		let friend = document.createElement("input")
		friend.value=friends[index];
		friend.name="friend";
		friend.type="hidden";
		form.appendChild(friend);

		document.body.appendChild(form);


		let each = document.createElement("button");
		each.style.width="300px";
		each.style.height="50px";
		if (index%2==0){
			each.style.background="#dfdfdf";
		}
		//each.onclick=function(){document.getElementById(index).submit()};
		each.onclick=function(){form.submit()};

		let p = document.createElement("p");
		p.textContent=users[friends[index]].user;

		each.appendChild(p);
		document.getElementById("friends").appendChild(each);
	}



	window.addEventListener("beforeunload", function (e) {
		comLoc("left")

	});


	shownearby();
	function shownearby(){
		document.getElementById("nearby").style.display="block";
		document.getElementById("friends").style.display="none";
		document.getElementById("nb").style.background="#bfbfbf";
		document.getElementById("sb").style.background="#efefef";
	}

		function showfriends(){
		document.getElementById("nearby").style.display="none";
		document.getElementById("friends").style.display="block";
		document.getElementById("sb").style.background="#bfbfbf";
		document.getElementById("nb").style.background="#efefef";
	}



	function initmap() {
		map = new google.maps.Map(document.getElementById("map"), {
		center: { lat: 142.1996, lng: 11.3493 },
		mapId: "e523f61bced7fe1e",
		zoom: 16,
		disableDefaultUI: true,
		});
		getLoc(map);
		map.onmousedown=function(){window.down=true;}
		map.onmouseup=function(){window.down=false;}

	}	



	//send position to server, recieve nearbys back.

	function comLoc(pos){
		let data = {
			pos: pos
		}
		let stack = {
			method: 'POST',
			headers: {
				"Content-type": "application/json; charset=UTF-8"
			},
				body: JSON.stringify(data)
		}
		console.log("sending")
		const promise = fetch("/loc", stack);
		promise.then(response => {
			if(!response.ok){
				console.error(response)
			} else {
				return response.json();
		}
		}).then(result => {
			addmarkers(result);
		})
	}

	window.count=0;
	function addmarkers(nearby){
		//let selector = document.getElementById("friends");
		//let form = document.getElementById("form");
		console.log(window.markers)
		try{for (mark in window.markers){
			window.markers[mark].setMap(null);
		}} catch (err){console.log(err)}
		window.markers=[]

		
		document.getElementById("nearby").innerHTML="";
						//document.getElementById("3").remove();
				const del = document.querySelectorAll('.dumpster');

				del.forEach(item => {
					item.remove();
				});

		for (marker in nearby){
			if (nearby[marker]){
				let index=marker;

				//document.getElementById(index).remove();

				let img = document.createElement("img");
				img.src=`uploads/${index}/avatar.png`;
				img.opacity=0;
				img.id="remove"
				document.body.appendChild(img);


				if (img.width > img.height){
					img.width=40;
				}	else{
					img.height=40;
				}

				//document.getElementById("remove").remove();
			
				//document.body.appendChild(img);




				let width= document.getElementById("remove").width;
				let height = document.getElementById("remove").height;
				document.getElementById("remove").remove();

				var icon = {
					url:`uploads/${index}/avatar.png`,
					scaledSize: new google.maps.Size(width, height),
					optimized:false
				}

				marker = new google.maps.Marker({
					position:{lat:-34,lng:150},//nearby[marker],
					//nearby[marker] works fine, its just if youre testing with mutliple tabs
					//in the same physical location, all the tabs stack on eachother
					//so I set them to a distance away for testing
					map:map,
					icon:icon,
					scaledSize: new google.maps.Size(width, height)
				})	
				window.markers.push(marker);
				

				let form = document.createElement("form");
				form.action="http://localhost:8080/view";
				form.method="POST";
				form.classList.add("dumpster");


				let friend = document.createElement("input")
				console.log(`VALUEVALUE ${index}`)
				friend.value=index;
				friend.name="friend";
				friend.type="hidden";
				form.appendChild(friend);



				document.body.appendChild(form);


				let each = document.createElement("button");
				each.style.width="300px";
				each.style.height="50px";
				if (index%2==0){
					each.style.background="rgb(223, 223, 223)";
				}
				//each.onclick=function(){document.getElementById(index).submit()};
				each.onclick=function(){form.submit()};

				let p = document.createElement("p");
				p.textContent=users[index].user;

				each.appendChild(p);
				document.getElementById("nearby").appendChild(each);

				google.maps.event.addDomListener(marker, 'click', function() {
					
					//selector.remove();

					let friend = document.createElement("input")
					friend.value=index;
					friend.name="friend";

					form.appendChild(friend);
					form.submit();
					//form.submit();
				})
			}


			//icon: `uploads/${marker}/avatar.png`

		}
	}


	function getLoc(){
		if (navigator.geolocation){

			async function update(first) {
				if (!first){
					let p = new Promise(function(resolve,reject) {
							console.log("not first")
							setTimeout(() => {
						 		resolve();
						 		navigator.geolocation.getCurrentPosition(track);

						 		
							}, 5000);
					});
					await p;
					update(false);

				} else{
					first=false;
					navigator.geolocation.getCurrentPosition(track);
				 	update(false);
				}
				//console.log("gettinghere");update(false);
			}


		update(true);
		} else{ 
			tool.textContent = "Browser does not support location feature";
		}
	}


	function posErr(err){
		switch(err.code){
			case err.PERMISSION_DENIED:
				tool.textContent="please allow Dex to view your position";
			case TIMEOUT:
				tool.textContent="connection to location server timed out";
			default:
				tool.textContent="an error occured";
		}
	}

	function track(pos){
		try{me.setMap(null);
		me=null;} catch{console.log("oh well")}
		console.log(pos)
		window.count++;
		
		let localpos = {lat: pos.coords.latitude, lng: pos.coords.longitude};
		window.local = localpos;



		//if (!window.down){
			//map.setCenter(localpos);
			//console.log("moved")
		//}
		if (window.count == 1){
			map.setCenter(localpos);
		} 
			let img = document.createElement("img");
				img.src=`uploads/${uid}/avatar.png`;
				img.opacity=0;
				img.id="remove"
				document.body.appendChild(img);


				if (img.width > img.height){
					img.width=40;
				}	else{
					img.height=40;
				}

				//document.getElementById("remove").remove();
			
				//document.body.appendChild(img);




				let width= document.getElementById("remove").width;
				let height = document.getElementById("remove").height;
				document.getElementById("remove").remove();

		var icon = {
			url:`uploads/${window.uid}/avatar.png`,
			scaledSize: new google.maps.Size(width, height),
			optimized:false
		}

		me = new google.maps.Marker({
			position:localpos,
			map:map,
			icon:icon
		})
		google.maps.event.addDomListener(me, 'click', function() {
					
					let form = document.getElementById("form");

					let friend = document.createElement("input")
					friend.value=uid;
					friend.name="friend";
					friend.type="hidden";

					form.appendChild(friend);
					form.submit();
					//form.submit();
				})
		console.log("refreshed");

		comLoc(localpos);
		//adds markers



	}

	window.initmap = initmap;




	function delprompt(){
		document.getElementById("delprompt").style.display="block";
	} function canceldel(){
		document.getElementById("delprompt").style.display="none";
	}

	if( /Android|iPhone|iPad|iPod/i.test(navigator.userAgent) ) {
		let dis = document.getElementById("display").style;
		dis.display="block";
		dis.position="absolute";
		dis.top="460px";

		let map = document.getElementById("map").style;
		map.width="80%";
		map.height="50%";

		let set = document.getElementById("usersettings").style;
		set.width="100px";
	}

</script>


<link rel="stylesheet" href="assets/style.css" type="text/css">
<!--
<script type="text/javascript">
	let dropdown = document.getElementById("friends");
	let placeholder = document.createElement("option");
	placeholder.text = "Choose a persons photos to view";
	dropdown.add(placeholder);
	dropdown.selectedIndex=0;
	placeholder.disabled=true;
</script>